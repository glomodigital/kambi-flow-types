// @flow

export type BetOffer = $ReadOnly<{|
  id: number,
  suspended?: boolean,
  closed?: string,
  criterion?: Object,
  extra?: string,
  betOfferType?: Object,
  placeLimit?: number,
  eventId?: number,
  outcomes?: Array<Outcome>,
  place?: boolean,
  eachWay?: {
    fractionMilli?: number,
    terms?: string,
    placeLimit?: number,
  },
  scorerType?: OutcomeCriterion,
  combinableOutcomes?: {
    playerOutcomes?: Array<Outcome>,
    resultOutcomes?: Array<Outcome>,
    outcomeCombinations?: {
      odds?: number,
      oddsFractional?: string,
      oddsAmerican?: string,
      playerOutcome?: Outcome,
      resultOutcome?: Outcome,
    },
  },
  tags?: Array<Tags>,
  oddsStats?: {
    unexpectedOddsTrend?: boolean,
    outcomeId?: number,
    startingOdds?: number,
    startingOddsFractional?: string,
    startingOddsAmerican?: string,
  },
  sortOrder?: number,
  cashOutStatus?: 'ENABLED' | 'DISABLED' | 'SUSPENDED',
  from?: number,
  to?: number,
  description?: string,
|}>

export type KambiEvent = $ReadOnly<{|
  id: number,
  name?: string,
  englishName?: string,
  homeName?: string,
  awayName?: string,
  start?: Date,
  originalStartTime?: string,
  group?: string,
  groupId?: number,
  path?: Array<GroupPath>,
  nonLiveBoCount?: number,
  liveBoCount?: number,
  sport?: Sport,
  tags?: string,
  state: 'NOT_STARTED' | 'STARTED' | 'FINISHED',
  distance?: string,
  eventNumber?: number,
  nameDetails?: string,
  editorial?: string,
  raceClass?: string,
  raceType?: string,
  trackType?: string,
  going?: string,
  timeform?: {
    analystVerdict?: string,
    drawComment?: string,
  },
  participants?: Array<any>,
  rank?: number,
  groupSortOrder?: number,
  teamColors?: {},
  sortOrder?: number,
  prematchEnd?: Date,
  meetingId?: string,
|}>

export type LiveData = $ReadOnly<{|
  eventId: number,
  matchClock?: MatchClock,
  score?: Score,
  statistics?: Statistics,
  description?: string,
  latestVisualization?: VisualizationOccurrence,
  occurrences?: Array<MatchOccurrence>,
  liveFeedUpdates?: Array<LiveFeedUpdate>,
  tickers?: Array<Ticker>,
  liveStatistics?: Array<LiveStatistics>,
|}>

export type KambiResponseType = $ReadOnly<{|
  betOffers: Array<BetOffer>,
  events: Array<KambiEvent>,
|}>

export type Event = {|
  betOffers: Array<BetOffer>,
  liveData: LiveData | null,
  event: KambiEvent,
|}

export type GlomoEvent = {|
  betOffers: Array<BetOffer>,
  liveData: LiveData | null,
  ...KambiEvent,
|}

export type GroupPath = $ReadOnly<{|
  id: number,
  name?: string,
  englishName?: string,
  termKey?: string,
|}>

export type InPlayResponse = $ReadOnly<{|
  events: Array<?Event>,
  terms: Array<?Term>,
  activeTermIds: Array<?string>,
  soonMode: 'HOURLY' | 'DAILY' | 'MONTHLY',
  categoryGroups: Array<?CategoryGroup>,
  activeCategories: Array<?string>,
  activeEventTypes: Array<?string>,
  eventTypes: Array<?string>,
  defaultEventType: string,
|}>

export type CategoryGroup = $ReadOnly<{|
  categoryGroupName: string,
  categories: Array<?Category>,
  localizedName: string,
|}>

export type Category = $ReadOnly<{|
  id: number,
  englishName: string,
  localizedName: string,
|}>

export type Term = $ReadOnly<{|
  type: string,
  id: string,
  termKey: string,
  localizedName: string,
  parentId: string,
  englishName: string,
  value?: string,
|}>

export type GroupResponse = $ReadOnly<{|
  group: Group,
|}>

export type Group = $ReadOnly<{|
  id: number,
  name?: string,
  boCount: number,
  uri?: string,
  englishName?: string,
  groups?: Array<?Group>,
  sport: Sport,
  eventCount: number,
  secondsToNextEvent?: number,
  termKey?: string,
  pathTermId?: string,
  sortOrder?: string,
|}>

export type ExtendedEventParticipant = $ReadOnly<{|
  startNumber?: number,
  startPosition?: number,
  driverName?: string,
  age?: string,
  weight?: string,
  editorial?: string,
  hasIcon?: boolean,
  trainerName?: string,
  formFigures?: [
    {
      type?: string,
      figures?: string,
    },
  ],
  lastRunDays?: [
    {
      type?: 'Flat' | 'Jump',
      days?: string,
    },
  ],
  raceHistorySet?: [
    {
      type?: 'Course' | 'CourseDistance' | 'Distance' | 'BeatenFavourite',
      stat?: string,
    },
  ],
|}>

export type EventParticipant = $ReadOnly<{|
  participantId?: number,
  name?: string,
  extended?: ExtendedEventParticipant,
  scratched?: boolean,
  nonRunner?: boolean,
  startNumber?: number,
|}>

export type LiveFeedUpdate = $ReadOnly<{|
  ticker?: Ticker,
  score?: Score,
  type?: string,
|}>

export type LiveStatistics = $ReadOnly<{|
  occurrenceTypeId?: string,
  count?: number,
|}>

export type MatchClock = $ReadOnly<{|
  minute?: number,
  second?: number,
  period?: string,
  running?: boolean,
  disabled?: boolean,
|}>

export type Player = $ReadOnly<{|
  id: number,
  name?: string,
|}>

export type MatchOccurrence = $ReadOnly<{|
  id: number,
  eventId?: number,
  occurrenceTypeId?: string,
  secondInPeriod?: number,
  secondInMatch?: number,
  secondInPeriodAddedTime?: number,
  periodId?: string,
  player?: Player,
  playerOut?: Player,
  additionalProperties?: Array<string>,
  action?: string,
  index?: number,
  periodIndex?: number,
|}>

/**
 * Outcome
 */
export type Outcome = $ReadOnly<{|
  id: number,
  label: string,
  englishLabel: string,
  odds: number,
  line: number,
  distance: string,
  scratched: boolean,
  startNr: number,
  prevOdds: Array<number>,
  criterion: OutcomeCriterion,
  participant: string,
  popular: boolean,
  type: string,
  homeTeamMember: boolean,
  betOfferId: number,
  changedDate: string,
  participantId: number,
  oddsFractional: string,
  oddsAmerican: string,
  status: 'OPEN' | 'CLOSED' | 'SUSPENDED' | 'SETTLED',
  cashOutStatus: 'ENABLED' | 'DISABLED' | 'SUSPENDED',
  homeScore: string,
  awayScore: string,
|}>

export type OutcomeCriterion = $ReadOnly<{|
  type: number,
  name: string,
|}>

export type Score = $ReadOnly<{|
  home?: string,
  away?: string,
  info?: string,
  who?: string,
|}>

export type Sport =
  | 'AMERICAN_FOOTBALL'
  | 'ARCHERY'
  | 'ATHLETICS'
  | 'AUSTRALIAN_RULES'
  | 'BADMINTON'
  | 'BANDY'
  | 'BASEBALL'
  | 'BASKETBALL'
  | 'BEACH_SOCCER'
  | 'BEACH_VOLLEYBALL'
  | 'BIATHLON'
  | 'BOBSLEIGH'
  | 'BOWLS'
  | 'BOXING'
  | 'BRANNBOLL'
  | 'BRIDGE'
  | 'CANOE_KAYAK_FLATWATER'
  | 'CANOE_KAYAK_SLALOM'
  | 'CART'
  | 'CHESS'
  | 'CRICKET'
  | 'CROSS_COUNTRY_SKIING'
  | 'CURLING'
  | 'CYCLING'
  | 'CYCLO_CROSS'
  | 'DARTS'
  | 'DISC_GOLF'
  | 'DIVING'
  | 'EQUESTRIAN'
  | 'ESPORTS'
  | 'FENCING'
  | 'FIELD_HOCKEY'
  | 'FIGURE_SKATING'
  | 'FLOORBALL'
  | 'FOOTBALL'
  | 'FORMULA_1'
  | 'FORTUNE_TELLER'
  | 'FREESTYLE_SKIING'
  | 'FUTSAL'
  | 'GAA_FOOTBALL'
  | 'GAA_HURLING'
  | 'GALLOPS'
  | 'GOLF'
  | 'GREYHOUNDS'
  | 'GYMNASTICS'
  | 'HANDBALL'
  | 'HAPPY_HOUR'
  | 'HARNESS'
  | 'HORSE_RACING'
  | 'ICE_HOCKEY'
  | 'INDOOR_FOOTBALL'
  | 'INDOOR_HOCKEY'
  | 'INLINE_HOCKEY'
  | 'INTERNATIONAL_RULES'
  | 'JUDO'
  | 'LUGE'
  | 'MARTIAL_ARTS'
  | 'MEDITERRANEAN_GAMES'
  | 'MODERN_PENTATHLON'
  | 'MOTOCROSS'
  | 'MOTORCYCLING'
  | 'MOTORSPORTS'
  | 'MOUNTAIN_BIKE'
  | 'NASCAR'
  | 'NETBALL'
  | 'NON_SPORT'
  | 'NORDIC_COMBINED'
  | 'NOT-SPECIFIED'
  | 'OLYMPIC_GAMES'
  | 'ORIENTEERING'
  | 'PESAPALLO'
  | 'POKER'
  | 'POLITICS'
  | 'POOL'
  | 'RACING'
  | 'RACKETLON'
  | 'RALLY'
  | 'RINK_HOCKEY'
  | 'ROLLER_HOCKEY'
  | 'ROWING'
  | 'RUGBY_LEAGUE'
  | 'RUGBY_UNION'
  | 'SAILING'
  | 'SHOOTING'
  | 'SHORT_TRACK'
  | 'SKELETON'
  | 'SKI_JUMPING'
  | 'SNOOKER'
  | 'SNOWBOARD'
  | 'SOFTBALL'
  | 'SPECIAL_BETS'
  | 'SPEEDWAY'
  | 'SPEED_SKATING'
  | 'SPORTS_ENTERTAINMENT'
  | 'SQUASH'
  | 'SUPERBIKE'
  | 'SURFING'
  | 'SWIMMING'
  | 'TABLEHOCKEY'

export type Team = $ReadOnly<{|
  yellowCards?: number,
  redCards?: number,
  corners?: number,
|}>

export type Statistics = $ReadOnly<{|
  football?: {
    home?: Team,
    away?: Team,
  },
  sets?: {
    home?: Array<number>, // non played sets are -1
    away?: Array<number>, // non played sets are -1
    homeServe?: boolean,
  },
|}>

export type Tags =
  | 'OFFERED_LIVE'
  | 'STREAMED_WEB'
  | 'STREAMED_MOBILE'
  | 'PREMATCH_STATS'
  | 'VISUALIZATION'
  | 'OPEN_FOR_LIVE'
  | 'SHOW_START_NUMBER'
  | 'MATCH'
  | 'COMPETITION'
  | 'AMERICAN_DISPLAY_FORMAT'

export type Ticker = $ReadOnly<{|
  eventId?: number,
  type?: string,
  minute?: number,
  message?: string,
  id: number,
|}>

export type VisualizationOccurrence = $ReadOnly<{|
  id: number,
  eventId?: number,
  occurrenceTypeId?: number,
  periodId?: number,
  visualization?: {|
    position?: {|
      x?: number, // x position of the field occurrence
      y?: number, // y position of the field occurrence
      zone?: string,
    |},
  |},
|}>
